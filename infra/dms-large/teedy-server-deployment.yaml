apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: ./kompose --file docker-compose.yaml convert
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: teedy-server
  name: teedy-server
  labels:
    app: teedy-server
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: teedy-server
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: ./kompose --file docker-compose.yaml convert
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.network/docker-internal: "true"
        io.kompose.network/internet: "true"
        io.kompose.service: teedy-server
    spec:
      containers:
        - env:
            - name: DATABASE_PASSWORD
              value: GH9wVgrKAMFh4cvVlvXn
            - name: DATABASE_URL
              value: jdbc:postgresql://tmed.cluster-cwu7wav0xdw6.us-west-1.rds.amazonaws.com:5432/tmed
            - name: DATABASE_USER
              value: teedy_db_user
            - name: DOCS_ADMIN_EMAIL_INIT
              value: admin@example.com
            - name: DOCS_ADMIN_PASSWORD_INIT
              value: $2a$05$PcMNUbJvsk7QHFSfEIDaIOjk1VI9/E7IPjTKx.jkjPxkx2EOKSoPS
            - name: DOCS_BASE_URL
              value: https://docs.example.com
          image: 658861819646.dkr.ecr.us-east-1.amazonaws.com/akilaniiecr:mydocs 
          name: teedy-server
          ports:
            - containerPort: 8080
          resources: {}
          volumeMounts:
            - mountPath: /data
              name: docs-persistent-storage
      restartPolicy: Always
      volumes:
        - name: docs-persistent-storage
          persistentVolumeClaim:
            claimName: docs-pvc
status: {}
